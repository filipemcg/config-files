// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "pageup",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 5
        },
        "when": "editorTextFocus"
    },
    {
        "key": "pagedown",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 5
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_7",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+k s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "-workbench.view.scm",
        "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+oem_7",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "saveAll"
    },
    {
        "key": "ctrl+k s",
        "command": "-saveAll"
    },
    {
        "key": "alt+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+0",
        "command": "github.copilot.acceptCursorPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-github.copilot.acceptCursorPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "alt+q",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPrevious",
        "when": "!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNext",
        "when": "editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "shift+alt+enter",
        "command": "search.action.focusSearchList"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor  && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+oem_comma",
        "command": "-gitlens.key.alt+,",
        "when": "gitlens:key:,"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.key.alt+.",
        "when": "gitlens:key:."
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+oem_period",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.quickchat.toggle",
        "when": "chatIsEnabled"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.terminal.chat.viewInChat"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorRight"
    }
]